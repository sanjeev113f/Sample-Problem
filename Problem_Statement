​
You have a rooted tree with N vertices numbered from 1 through N where the root is vertex 1. You are given M triplets, the j^th triplet is denoted by three integers u(j), v(j), c(j). The  triplet represents a simple path in the tree with endpoints in u(j) and v(j) such that u(j) is ancestor of v(j). The cost of the path is c(j).

You have to select a subset of the paths such that the sum of path costs is maximum and the  i^th edge of the tree belongs to at most d(i) paths from the subset. Print the sum as the output.

Task

Print the sum as the output.

Example

N = 3
Q = 2
Query = [[1, 1, 3, 1], [2, 1, 3, -1]]
 Approach 

let a array Arr  of lenth N= [0, 0, 0, 0, 0].
Query 1: After performing xor operation on all elements from position 1 to 3 with value 1, array = {1, 1, 1}.

Query 2: the minimum distance between two elements with value 1 in a subarray [1, 3] is 1.

Thus, the answer array is [1].

Function description

Complete the function solve provided in the editor. This function takes the following 4 parameters and returns the required answer:

N: Represents the total number of vertices.
M: Represents the total number of paths.
Edges: Represents the list of edges.
Paths: Represents the list of paths.


Input Format

Note: This is the input format that you must use to provide custom input (available above the Compile and Test button).

The first line contains N denoting the number of nodes and M denoting number of paths.
The Second line contains Q denoting the number of queries.
Next N-1 subsequent lines contains three space-separated integers describing the respective values of a(i), b(i), d(i) and  where (a(i), b(i)) is an edge in the tree and d(i) is maximum number of paths which can include this edge.
Next M subsequent lines contains three space-separated integers describing the respective values of u(j), v(j), c(j) and that define the j^th path and its cost.


Output Format

For each testcase, Print the required answer followed by a space.

Constraints

1 <= T<= 1000
1 <=N, over all testcases N*M <= 5*10^5
1 <= M <= 1000
1 <= c(i) <= 10^9
1 <= d(i) <= M
